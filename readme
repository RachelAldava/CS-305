•	Briefly summarize your client, Artemis Financial, and their software requirements. Who was the client? What issue did they want you to address?
For the SNHU class CS-305 “Software Security”, Artemis Financial was the class’s fictional client whose industry was in financial planning. The requirement from us was that we needed to refactor a code base in order to produce a REST API which was free from software vulnerabilities.

•	What did you do very well when you found your client’s software security vulnerabilities? Why is it important to code securely? What value does software security add to a company’s overall wellbeing?
My final submission is, at time of writing, ungraded. As such, I haven’t received external feedback for my work. I feel that I did a fairly good job ensuring that all of the dependencies (save for the one proprietary one which we were provided) were as up-to-date as possible. 

•	What part of the vulnerability assessment was challenging or helpful to you?
One challenge I had was locating the correct configuration file which enabled HTTPS, then configuring it correctly to accept a self-generated certificate. The course material did not seem to include any mention or documentation of these config files, so it was a process of discovering that this was the reason behind a few opaque error messages. 

•	How did you increase layers of security? In the future, what would you use to assess vulnerabilities and decide which mitigation techniques to use? How did you make certain the code and software application were functional and secure? After refactoring the code, how did you check to see whether you introduced new vulnerabilities?
I first started by using a vulnerability identification tool to detect any vulnerabilities with the code base. As the code base was around three years out of date, there were many published vulnerabilities. I updated various elements of the project to their latest versions, ran the dependency check again, and found only two vulnerabilities remained. I reviewed those vulnerabilities and determined that they would not have any impact on our project. I changed the API from HTTP to HTTS and designed the API as specified.
The API needed to produce a hash from a “unique data string” and part of the requirement was to determine a sufficiently secure hashing algorithm. Instead of hashing a simple string such as “hello world”, I chose to use an arbitrary file as the unique data string. I wrote code which read the file as bits, produced a hash from the bits, then discarded the bits, saved the hash, then output the hash. Throughout, I observed proper encapsulation, although opportunities to showcase secure coding practices were limited as I wrote fewer than 100 lines of code for this project. 
After finishing the code, I ran the dependency check again and found that there as a new vulnerability relating to how the file was read into memory as bits. After some investigation, I determined that the affected methods were not used in my code, so no changes were needed. 
After the vulnerability check, I tested inputs to detect errors and ensured that the program was not able to read any files where were not in a specific directory. I found one issue with an unhandled exception when the specified filename was incorrect, and I corrected the issue. I ran the vulnerability check one last time and found no new errors.
 
•	What resources, tools, or coding practices did you use that might be helpful in future assignments or tasks?
The vulnerability identification tool we used was “dependency check” by Jeremy Long. I also used an eclipse plugin to generate certificates. As for resources / coding practices, I did need to read a fair bit of github posts to help understand the error messages I was getting due to improper configuration files. 

•	Employers sometimes ask for examples of work that you have successfully completed to show your skills, knowledge, and experience. What might you show future employers from this assignment?
I recorded the vulnerabilities to the code base before and after the project, which can demonstrate my ability to address security issues. I can also show employers that I was able to produce a functional API using springboot. 
